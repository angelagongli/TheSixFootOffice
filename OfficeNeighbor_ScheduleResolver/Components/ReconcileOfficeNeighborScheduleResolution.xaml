<Activity mc:Ignorable="sap sap2010" x:Class="ReconcileOfficeNeighborScheduleResolution" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OfficeNeighborScheduleResolutionID" Type="InArgument(x:Int32)" />
    <x:Property Name="in_OfficeNeighborScheduleResolutionPhase" Type="InArgument(x:String)" />
    <x:Property Name="out_OfficeNeighborScheduleResolutionDayHTML" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>807.333333333333,2058.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReconcileOfficeNeighborScheduleResolution_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReconcileOfficeNeighborScheduleResolution" sap:VirtualizedContainerService.HintSize="748,1994" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="OfficeNeighborScheduleRequestPhase" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_Connection" />
      <Variable x:TypeArguments="sd:DataTable" Name="OfficeNeighborScheduleRequestQueryResultDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="NearestOfficeNeighborA_ScheduleRequestDayQueryResultDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="NearestOfficeNeighborB_ScheduleRequestDayQueryResultDT" />
      <Variable x:TypeArguments="x:Int32" Name="i" />
      <Variable x:TypeArguments="sd:DataRow" Name="rowB" />
      <Variable x:TypeArguments="x:String" Name="inOfficeRequirementRequestedA" />
      <Variable x:TypeArguments="x:String" Name="inOfficeRequirementRequestedB" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DatabaseTransaction ContinueOnError="{x:Null}" DatabaseConnection="[DB_Connection]" DisplayName="Start Transaction" sap:VirtualizedContainerService.HintSize="706,1902" sap2010:WorkflowViewState.IdRef="DatabaseTransaction_1" ProviderName="MySql.Data.MySqlClient" UseTransaction="True" ConnectionString="Host=localhost;Port=3306;Database=Office_DB;Username=root;Password=;">
      <ui:DatabaseTransaction.Body>
        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="672,1793.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_OfficeNeighborScheduleResolutionPhase.Equals(&quot;Submitted&quot;)]" sap:VirtualizedContainerService.HintSize="630,212.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[OfficeNeighborScheduleRequestPhase]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Submitted</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[OfficeNeighborScheduleRequestPhase]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Re-Submitted</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[OfficeNeighborScheduleRequestQueryResultDT]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="630,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="SELECT id FROM Office_DB.OfficeNeighborScheduleRequests&#xA;WHERE OfficeNeighborScheduleResolutionId=@OfficeNeighborScheduleResolutionID&#xA;AND officeNeighborScheduleRequestPhase=@OfficeNeighborScheduleRequestPhase;">
            <ui:ExecuteQuery.Parameters>
              <InArgument x:TypeArguments="x:Int32" x:Key="OfficeNeighborScheduleResolutionID">[in_OfficeNeighborScheduleResolutionID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="OfficeNeighborScheduleRequestPhase">[OfficeNeighborScheduleRequestPhase]</InArgument>
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[NearestOfficeNeighborA_ScheduleRequestDayQueryResultDT]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="630,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="SELECT * FROM Office_DB.OfficeNeighborScheduleRequestDays&#xA;WHERE OfficeNeighborScheduleRequestId=@OfficeNeighborScheduleRequestID&#xA;ORDER BY date;">
            <ui:ExecuteQuery.Parameters>
              <InArgument x:TypeArguments="x:Int32" x:Key="OfficeNeighborScheduleRequestID">[CInt(OfficeNeighborScheduleRequestQueryResultDT.Rows(0)("id"))]</InArgument>
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[NearestOfficeNeighborB_ScheduleRequestDayQueryResultDT]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="630,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="SELECT * FROM Office_DB.OfficeNeighborScheduleRequestDays&#xA;WHERE OfficeNeighborScheduleRequestId=@OfficeNeighborScheduleRequestID&#xA;ORDER BY date;">
            <ui:ExecuteQuery.Parameters>
              <InArgument x:TypeArguments="x:Int32" x:Key="OfficeNeighborScheduleRequestID">[CInt(OfficeNeighborScheduleRequestQueryResultDT.Rows(1)("id"))]</InArgument>
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <Assign sap:VirtualizedContainerService.HintSize="630,62" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="630,62" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_OfficeNeighborScheduleResolutionDayHTML]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[NearestOfficeNeighborA_ScheduleRequestDayQueryResultDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="630,862.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowA" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="579.333333333333,713.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="537.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[rowB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[NearestOfficeNeighborB_ScheduleRequestDayQueryResultDT.Rows(i)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="537.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[inOfficeRequirementRequestedA]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[rowA("inOfficeRequirementRequested").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="537.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[inOfficeRequirementRequestedB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[rowB("inOfficeRequirementRequested").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[inOfficeRequirementRequestedA.Contains(&quot;Office&quot;) And inOfficeRequirementRequestedB.Contains(&quot;Office&quot;) And Not ((inOfficeRequirementRequestedA.Equals(&quot;In Office AM&quot;) Or inOfficeRequirementRequestedB.Equals(&quot;In Office AM&quot;)) And (inOfficeRequirementRequestedA.Equals(&quot;In Office PM&quot;) Or inOfficeRequirementRequestedB.Equals(&quot;In Office PM&quot;)))]" sap:VirtualizedContainerService.HintSize="537.333333333333,213.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_OfficeNeighborScheduleResolutionDayHTML]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[out_OfficeNeighborScheduleResolutionDayHTML + String.Format("&lt;li&gt;{0}: Conflicting Request of &lt;em&gt;{1}&lt;/em&gt; and &lt;em&gt;{2}&lt;/em&gt;&lt;/li&gt;", rowA("date"), inOfficeRequirementRequestedA, inOfficeRequirementRequestedB)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.333333333333,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[String.Format(&quot;All good on {0}: A requests {1}, B requests {2}&quot;, rowA(&quot;date&quot;), inOfficeRequirementRequestedA, inOfficeRequirementRequestedB)]" />
                    </If.Else>
                  </If>
                  <Assign sap:VirtualizedContainerService.HintSize="537.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
      </ui:DatabaseTransaction.Body>
    </ui:DatabaseTransaction>
  </Sequence>
</Activity>